version: "3.3"
services:

  frontend:
    image: ghcr.io/fosten/plone-mountain-site-frontend:${STACK_PARAM:-latest}
    networks:
      - traefik-public
      - traefik-testing_mountain
    environment:
      RAZZLE_INTERNAL_API_PATH: http://testing-lillymountain-com_backend:8080/Plone
    ports:
      - "3013:3000"
    depends_on:
      - backend
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == mountainapp
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        # SERVICE
        - traefik.http.services.testing_mountain-frontend.loadbalancer.server.port=3000
        # MIDDLEWARES
        ### ClassicUI Access Authentication
        - traefik.http.middlewares.testing_mountain-frontend-auth.basicauth.users=testing:$$2y$$05$$hGP72w.Rgky4RK7FrN9km.UpdwwHqB8gJNp8TQ4s4qDK8LxjfISl6
        # HOSTS: Main
        - traefik.http.routers.testing_mountain-frontend.rule=Host(`testing.lillymountain.com`)
        - traefik.http.routers.testing_mountain-frontend.entrypoints=websecure
        - traefik.http.routers.testing_mountain-frontend.tls=true
        - traefik.http.routers.testing_mountain-frontend.tls.certresolver=mydnschallenge
        - traefik.http.routers.testing_mountain-frontend.service=testing_mountain-frontend
        - traefik.http.routers.testing_mountain-frontend.middlewares=gzip,testing_mountain-frontend-auth

  backend:
    image: ghcr.io/fosten/plone-mountain-site-backend:${STACK_PARAM:-latest}
    networks:
      - traefik-public
      - traefik-testing_mountain
    environment:
      RELSTORAGE_DSN: "dbname='${TESTING_DB_NAME:-plone}' user='${TESTING_DB_USER:-plone}' host='${DB_HOST:-db}' password='${DB_PASSWORD:-plone}'"
    ports:
      - "8093:8080"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == mountainapp
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        # SERVICE
        - traefik.http.services.testing_mountain-backend.loadbalancer.server.port=8080
        # MIDDLEWARES
        ### basic_auth Authentication ClassicUI & Zope
        - traefik.http.middlewares.testing_mountain-backend-auth.basicauth.users=admin:$$2y$$05$$hGP72w.Rgky4RK7FrN9km.UpdwwHqB8gJNp8TQ4s4qDK8LxjfISl6
        - traefik.http.middlewares.testing_mountain-zope-auth.basicauth.users=admin:$$2y$$05$$hGP72w.Rgky4RK7FrN9km.UpdwwHqB8gJNp8TQ4s4qDK8LxjfISl6
        ### Backend ++api++ VHM
        - "traefik.http.middlewares.testing_mountain-vhm-cleanup.replacepathregex.regex=^/((\\+\\+api\\+\\+/){1,})($$|.*)"
        - "traefik.http.middlewares.testing_mountain-vhm-cleanup.replacepathregex.replacement=/VirtualHostBase/https/testing.lillymountain.com/Plone/++api++/VirtualHostRoot/$$3"
        - "traefik.http.middlewares.testing_mountain-vhm.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
        - "traefik.http.middlewares.testing_mountain-vhm.replacepathregex.replacement=/VirtualHostBase/https/testing.lillymountain.com/Plone/++api++/VirtualHostRoot/$$1"
        ### Backend ClassicUI VHM
        - "traefik.http.middlewares.testing_mountain-vhm-classicui.replacepathregex.regex=^/ClassicUI($$|/.*)"
        - "traefik.http.middlewares.testing_mountain-vhm-classicui.replacepathregex.replacement=/VirtualHostBase/https/testing.lillymountain.com/Plone/VirtualHostRoot/_vh_ClassicUI/$$1"
        ### Backend zopeadmin root path
        - "traefik.http.middlewares.testing_mountain-root-zopeadmin.replacepathregex.regex=^/zopeadmin($$|/.*)"
        - "traefik.http.middlewares.testing_mountain-root-zopeadmin.replacepathregex.replacement=/VirtualHostBase/https/testing.lillymountain.com/VirtualHostRoot/_vh_ClassicUI/manage_main/$$1"

        # ROUTES
        ## testing.lillymountain.com API
        - traefik.http.routers.testing_mountain-backend.rule=Host(`testing.lillymountain.com`) && (PathPrefix(`/++api++`))
        - traefik.http.routers.testing_mountain-backend.entrypoints=websecure
        - traefik.http.routers.testing_mountain-backend.tls=true
        - traefik.http.routers.testing_mountain-backend.service=testing_mountain-backend
        - traefik.http.routers.testing_mountain-backend.middlewares=gzip,testing_mountain-vhm-cleanup,testing_mountain-vhm
        ### testing.lillymountain.com /ClassicUI - protected with basic auth (prevent SEOs from crawl it)
        - traefik.http.routers.testing_mountain-classicui.rule=Host(`testing.lillymountain.com`) && (PathPrefix(`/ClassicUI`))
        - traefik.http.routers.testing_mountain-classicui.entrypoints=websecure
        - traefik.http.routers.testing_mountain-classicui.tls=true
        - traefik.http.routers.testing_mountain-classicui.service=testing_mountain-backend
        - traefik.http.routers.testing_mountain-classicui.middlewares=gzip,testing_mountain-backend-auth,testing_mountain-vhm-classicui
        ### testing.lillymountain.com /zope - protected with basic auth (prevent unauthorized acess)
        - traefik.http.routers.testing_mountain-zopeadmin.rule=Host(`testing.lillymountain.com`) && (PathPrefix(`/zopeadmin`))
        - traefik.http.routers.testing_mountain-zopeadmin.entrypoints=websecure
        - traefik.http.routers.testing_mountain-zopeadmin.tls=true
        - traefik.http.routers.testing_mountain-zopeadmin.service=testing_mountain-backend
        - traefik.http.routers.testing_mountain-zopeadmin.middlewares=gzip,testing_mountain-zope-auth,testing_mountain-root-zopeadmin

networks:
  traefik-public:
    external: true
  traefik-testing_mountain:
    driver: overlay
